# .github/workflows/build-docker-image.yml
name: build-binary-package

on: 
  release:
    types: prereleased

jobs:
  build-binary-package:
    name: Build and upload binary package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        static:
          - false
          - true
        goos:
          - linux
          - freebsd
        goarch:
          - amd64
          - arm64
    steps:
    - name: Set up Go 1.19
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build the binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        make release
      if: ${{!static}}

    - name: Build the binaries (static)
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        make release BUILD_STATIC=yes
        mv crowdsec-blocklist-mirror-${{ env.GOOS }}-${{ env.GOARCH }}.tgz crowdsec-blocklist-mirror-${{ env.GOOS }}-${{ env.GOARCH }}-static.tgz
      if: ${{static}}

    - name: Upload to release
      uses: JasonEtco/upload-to-release@master
      with:
        args: crowdsec-blocklist-mirror-${{ env.GOOS }}-${{ env.GOARCH }}.tgz application/x-gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      if: ${{!static}}

    - name: Upload to release (static)
      uses: JasonEtco/upload-to-release@master
      with:
        args: crowdsec-blocklist-mirror-${{ env.GOOS }}-${{ env.GOARCH }}-static.tgz application/x-gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      if: ${{!static}}
